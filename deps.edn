{
 :mvn/repos {"clojars" {:url "https://repo.clojars.org/"}}

 :paths     ["src" "resources" "target/classes"]

 :deps      {org.clojure/clojure   {:mvn/version "1.10.1"}
             org.clojure/tools.cli {:mvn/version "1.0.194"}
             badigeon/badigeon     {:git/url "https://github.com/EwenG/badigeon.git"
                                    :sha     "1edf7ae465db870ec0066f28226edb9b04873b70"
                                    :tag     "0.0.11"}}

 :aliases   {
             :run        {:extra-paths ["resources"]
                          :jvm-opts    []
                          :main-opts   ["--main" "org.rssys.pbuilder.core"]}


             :repl       {:extra-deps  {nrepl                {:mvn/version "0.6.0"}
                                        healthsamurai/matcho {:mvn/version "0.3.3"}
                                        hashp                {:mvn/version "0.1.1"}}
                          :jvm-opts    []
                          :extra-paths ["dev/src" "resources" "test"]
                          :main-opts   ["--main" "nrepl.cmdline"]}

             :test       {:extra-deps  {lambdaisland/kaocha           {:mvn/version "0.0-573"}
                                        lambdaisland/kaocha-cloverage {:mvn/version "0.0-41"}
                                        healthsamurai/matcho          {:mvn/version "0.3.3"}}
                          :extra-paths ["resources" "test" "test/resources"]
                          :jvm-opts    []
                          :main-opts   ["--main" "kaocha.runner"]}

             ;; build uberjar (compile java, clj files): clojure -R:bg -A:uberjar
             :uberjar    {:main-opts ["-e" "(load-file,\"dev/src/build.clj\"),(build/clean),(build/uberjar)"]}

             ;; compile java classes only: clojure -R:bg -A:javac
             :javac      {:main-opts ["-e" "(load-file,\"dev/src/build.clj\"),(build/compile-java)"]}

             ;; run on Java 9+ to build standalone app: clojure -R:bg -A:standalone
             :standalone {:main-opts ["-e" "(load-file,\"dev/src/build.clj\"),(build/clean),(build/standalone)"]}
             }
 }
